{
  "workbench.activityBar.visible": false,
  "workbench.list.automaticKeyboardNavigation": false,
  "workbench.editor.showTabs": false,
  "workbench.editor.limit.enabled": true,
  "workbench.editor.limit.value": 1,
  "workbench.editor.limit.perEditorGroup": true,
  "workbench.editor.splitSizing": "split",
  "workbench.colorTheme": "GitHub Dark Default",
  "workbench.productIconTheme": "fluent-icons",
  "workbench.iconTheme": "eq-material-theme-icons-light",
  "workbench.startupEditor": "newUntitledFile",
  "workbench.colorCustomizations": {
    "editorInlayHint.background": "#00000000",
    "editorInlayHint.foreground": "#808080",
    "scrollbar.shadow": "#ffffff00"
  },
  "window.menuBarVisibility": "toggle",
  "window.confirmBeforeClose": "keyboardOnly",
  "window.commandCenter": true,
  "zenMode.fullScreen": false,
  "editor.suggestSelection": "first",
  "editor.fontLigatures": true,
  "editor.minimap.enabled": false,
  "editor.smoothScrolling": true,
  "editor.wordWrap": "on",
  "editor.formatOnSave": true,
  "editor.bracketPairColorization.enabled": true,
  "editor.fontFamily": "'Cascadia Code', Consolas, 'Courier New', monospace",
  "editor.hover.above": false,
  "editor.inlineSuggest.enabled": true,
  "editor.suggest.matchOnWordStartOnly": false,
  "editor.scrollBeyondLastLine": false,
  "editor.experimental.useCustomCodeActionMenu": true,
  "editor.inlayHints.padding": true,
  "terminal.integrated.inheritEnv": true,
  "terminal.integrated.tabs.enabled": false,
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.shellIntegration.enabled": true,
  "terminal.integrated.shellIntegration.showWelcome": false,
  "terminal.integrated.commandsToSkipShell": [
    "workbench.action.focusStatusBar",
    "workbench.action.toggleAuxiliaryBar"
  ],
  "diffEditor.renderSideBySide": false,
  "git.allowForcePush": true,
  "git.confirmForcePush": true,
  "settingsSync.ignoredExtensions": [
    "shakram02.bash-beautify",
    "dart-code.dart-code",
    "dart-code.flutter",
    "ms-python.python",
    "ms-python.vscode-pylance",
    "ms-toolsai.jupyter",
    "github.remotehub",
    "slevesque.shader",
    "bradlc.vscode-tailwindcss",
    "ms-dotnettools.csharp",
    "mtxr.sqltools",
    "dtsvet.vscode-wasm",
    "juanblanco.solidity"
  ],
  "vim.enableNeovim": true,
  "vim.neovimPath": "nvim",
  "vim.easymotion": true,
  "vim.useSystemClipboard": true,
  "vim.replaceWithRegister": true,
  "vim.handleKeys": {
    "<C-t>": false
  },
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": [
        "s"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "s"
      ]
    },
    {
      "before": [
        "g",
        "H"
      ],
      "commands": [
        "editor.action.referenceSearch.trigger"
      ],
      "silent": true
    },
    {
      "before": [
        "g",
        "O"
      ],
      "commands": [
        "workbench.action.gotoSymbol"
      ],
      "silent": true
    },
    {
      "before": [
        "<C-w>",
        "g",
        "d"
      ],
      "commands": [
        "editor.action.revealDefinitionAside"
      ],
      "silent": true
    },
    {
      "before": [
        "<C-w>",
        "l"
      ],
      "commands": [
        "workbench.action.toggleEditorGroupLock"
      ],
      "silent": true
    },
    {
      "before": [
        "g",
        "c"
      ],
      "commands": [
        "editor.toggleFold"
      ],
      "silent": true
    },
    {
      "before": [
        "<C-w>",
        "H"
      ],
      "commands": [
        "workbench.action.moveActiveEditorGroupLeft"
      ],
      "silent": true
    },
    {
      "before": [
        "<C-w>",
        "J"
      ],
      "commands": [
        "workbench.action.moveActiveEditorGroupDown"
      ],
      "silent": true
    },
    {
      "before": [
        "<C-w>",
        "K"
      ],
      "commands": [
        "workbench.action.moveActiveEditorGroupUp"
      ],
      "silent": true
    },
    {
      "before": [
        "<C-w>",
        "L"
      ],
      "commands": [
        "workbench.action.moveActiveEditorGroupRight"
      ],
      "silent": true
    },
    {
      "before": [
        "<C-w>",
        "_"
      ],
      "commands": [
        "workbench.action.minimizeOtherEditors"
      ],
      "silent": true
    }
  ],
  "extensions.experimental.affinity": {
    "vscodevim.vim": 1
  },
  "whichkey.bindings": [
    {
      "key": "?",
      "name": "Search keybindings",
      "icon": "keyboard",
      "type": "command",
      "command": "whichkey.searchBindings"
    },
    {
      "key": "d",
      "name": "+Debug",
      "icon": "bug",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Start debug",
          "type": "command",
          "command": "workbench.action.debug.start"
        },
        {
          "key": "D",
          "name": "Run without debugging",
          "type": "command",
          "command": "workbench.action.debug.run"
        },
        {
          "key": "S",
          "name": "Stop debug",
          "type": "command",
          "command": "workbench.action.debug.stop"
        },
        {
          "key": "c",
          "name": "Continue debug",
          "type": "command",
          "command": "workbench.action.debug.continue"
        },
        {
          "key": "p",
          "name": "Pause debug",
          "type": "command",
          "command": "workbench.action.debug.pause"
        },
        {
          "key": "R",
          "name": "Restart debug",
          "type": "command",
          "command": "workbench.action.debug.restart"
        },
        {
          "key": "i",
          "name": "Step into",
          "type": "command",
          "command": "workbench.action.debug.stepInto"
        },
        {
          "key": "s",
          "name": "Step over",
          "type": "command",
          "command": "workbench.action.debug.stepOver"
        },
        {
          "key": "o",
          "name": "Step out",
          "type": "command",
          "command": "workbench.action.debug.stepOut"
        },
        {
          "key": "b",
          "name": "Toggle breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleBreakpoint"
        },
        {
          "key": "B",
          "name": "Toggle inline breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleInlineBreakpoint"
        },
        {
          "key": "j",
          "name": "Jump to cursor",
          "type": "command",
          "command": "debug.jumpToCursor"
        },
        {
          "key": "v",
          "name": "REPL",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        },
        {
          "key": "w",
          "name": "Focus on watch window",
          "type": "command",
          "command": "workbench.debug.action.focusWatchView"
        },
        {
          "key": "W",
          "name": "Add to watch",
          "type": "command",
          "command": "editor.debug.action.selectionToWatch"
        }
      ]
    },
    {
      "key": "g",
      "name": "+Git",
      "icon": "git-branch",
      "type": "bindings",
      "bindings": [
        {
          "key": "a",
          "name": "Amend",
          "type": "command",
          "command": "git.commitStagedAmend"
        },
        {
          "key": "b",
          "name": "Checkout",
          "type": "command",
          "command": "git.checkout"
        },
        {
          "key": "c",
          "name": "Commit",
          "type": "command",
          "command": "git.commit"
        },
        {
          "key": "d",
          "name": "Discard changes",
          "type": "command",
          "command": "git.clean"
        },
        {
          "key": "f",
          "name": "Fetch",
          "type": "command",
          "command": "git.fetch"
        },
        {
          "key": "g",
          "name": "GitLens: Graph",
          "type": "command",
          "command": "gitlens.showGraphPage"
        },
        {
          "key": "i",
          "name": "Init",
          "type": "command",
          "command": "git.init"
        },
        {
          "key": "m",
          "name": "Merge",
          "type": "command",
          "command": "git.merge"
        },
        {
          "key": "p",
          "name": "Publish",
          "type": "command",
          "command": "git.publish"
        },
        {
          "key": "P",
          "name": "Push (Force)",
          "type": "command",
          "command": "git.pushForce"
        },
        {
          "key": "s",
          "name": "Stage",
          "type": "command",
          "command": "git.stage"
        },
        {
          "key": "S",
          "name": "Stage all",
          "type": "command",
          "command": "git.stageAll"
        },
        {
          "key": "t",
          "name": "Status",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "u",
          "name": "Unstage",
          "type": "command",
          "command": "git.unstage"
        },
        {
          "key": "U",
          "name": "Unstage all",
          "type": "command",
          "command": "git.unstageAll"
        }
      ]
    },
    {
      "key": "t",
      "name": "+Tasks",
      "icon": "tasklist",
      "type": "bindings",
      "bindings": [
        {
          "key": ".",
          "name": "Rerun last task",
          "type": "command",
          "command": "workbench.action.tasks.reRunTask"
        },
        {
          "key": ":",
          "name": "Run task",
          "type": "command",
          "command": "workbench.action.tasks.runTask"
        },
        {
          "key": "b",
          "name": "Run build tasks",
          "type": "command",
          "command": "workbench.action.tasks.build"
        },
        {
          "key": "c",
          "name": "Configure task runner",
          "type": "command",
          "command": "workbench.action.tasks.configureTaskRunner"
        },
        {
          "key": "g",
          "name": "Show running tasks",
          "type": "command",
          "command": "workbench.action.tasks.showTasks"
        },
        {
          "key": "l",
          "name": "Show task log",
          "type": "command",
          "command": "workbench.action.tasks.showLog"
        },
        {
          "key": "t",
          "name": "Run test task",
          "type": "command",
          "command": "workbench.action.tasks.test"
        },
        {
          "key": "x",
          "name": "Terminate task",
          "type": "command",
          "command": "workbench.action.tasks.terminate"
        },
        {
          "key": "R",
          "name": "Restart running task",
          "type": "command",
          "command": "workbench.action.tasks.restartTask"
        }
      ]
    },
    {
      "key": "x",
      "name": "+Text",
      "icon": "repl",
      "type": "bindings",
      "bindings": [
        {
          "key": "i",
          "name": "Organize imports",
          "type": "command",
          "command": "editor.action.organizeImports"
        },
        {
          "key": "r",
          "name": "Rename symbol",
          "type": "command",
          "command": "editor.action.rename"
        },
        {
          "key": "R",
          "name": "Refactor",
          "type": "command",
          "command": "editor.action.refactor"
        },
        {
          "key": ".",
          "name": "Quick fix",
          "type": "command",
          "command": "editor.action.quickFix"
        },
        {
          "key": "a",
          "name": "Find all references",
          "type": "command",
          "command": "editor.action.referenceSearch.trigger"
        },
        {
          "key": "m",
          "name": "+Merge conflict",
          "type": "bindings",
          "bindings": [
            {
              "key": "b",
              "name": "Accept both",
              "type": "command",
              "command": "merge-conflict.accept.both"
            },
            {
              "key": "c",
              "name": "Accept current",
              "type": "command",
              "command": "merge-conflict.accept.current"
            },
            {
              "key": "i",
              "name": "Accept incoming",
              "type": "command",
              "command": "merge-conflict.accept.incoming"
            },
            {
              "key": "B",
              "name": "Accept all both",
              "type": "command",
              "command": "merge-conflict.accept.all-both"
            },
            {
              "key": "C",
              "name": "Accept all current",
              "type": "command",
              "command": "merge-conflict.accept.all-current"
            },
            {
              "key": "I",
              "name": "Accept all incoming",
              "type": "command",
              "command": "merge-conflict.accept.all-incoming"
            },
            {
              "key": "s",
              "name": "Accept selection",
              "type": "command",
              "command": "merge-conflict.accept.selection"
            },
            {
              "key": "k",
              "name": "Compare current conflict",
              "type": "command",
              "command": "merge-conflict.compare"
            },
            {
              "key": "n",
              "name": "Next Conflict",
              "type": "command",
              "command": "merge-conflict.next"
            },
            {
              "key": "N",
              "name": "Previous Conflict",
              "type": "command",
              "command": "merge-conflict.previous"
            }
          ]
        }
      ]
    }
  ]
}